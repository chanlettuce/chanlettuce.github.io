{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","map","post","frontmatter","fields","slug","key","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,8GAgEeA,UA3DoD,SAAC,GAG9D,QAFJC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,GAAY,UAAAF,EAAKG,YAAL,mBAAWC,oBAAX,eAAyBC,QAAzB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,QACX,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,QACX,wBAAIK,UAAU,aACXJ,EAAMK,KAAI,SAAAC,GAAQ,QACXP,GAAQ,UAAAO,EAAKC,mBAAL,eAAkBR,SAAlB,UAA2BO,EAAKE,cAAhC,aAA2B,EAAaC,MAEtD,OACE,wBAAIC,IAAKJ,EAAKE,OAAQC,MACpB,6BACEL,UAAU,iBACVO,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIP,EAAKE,OAAQC,KAAOK,SAAS,OACrC,0BAAMA,SAAS,YAAYf,KAG/B,+BAAQO,EAAKC,YAAaQ,OAE5B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAaW,aAAeZ,EAAKa,SAEhDL,SAAS,yBActB,IAAMM,EAAY","file":"component---src-pages-index-tsx-671af9989b36f34ac2e6.js","sourcesContent":["import { graphql, Link, PageProps } from 'gatsby';\nimport React from 'react';\nimport { Layout } from '../components/Layout';\nimport { SEO } from '../components/SEO';\n\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogIndexQuery>> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"TOP\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"TOP\" />\n      <ol className=\"post-list\">\n        {posts.map(post => {\n          const title = post.frontmatter?.title || post.fields?.slug;\n\n          return (\n            <li key={post.fields!.slug!}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields!.slug!} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter!.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter!.description || post.excerpt!,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}